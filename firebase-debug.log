[debug] [2025-06-06T10:21:11.200Z] ----------------------------------------------------------------------
[debug] [2025-06-06T10:21:11.201Z] Command:       /Users/safiurrehman/.nvm/versions/node/v23.11.0/bin/node /opt/homebrew/bin/firebase deploy --only functions
[debug] [2025-06-06T10:21:11.201Z] CLI Version:   13.30.0
[debug] [2025-06-06T10:21:11.202Z] Platform:      darwin
[debug] [2025-06-06T10:21:11.202Z] Node Version:  v23.11.0
[debug] [2025-06-06T10:21:11.202Z] Time:          Fri Jun 06 2025 15:21:11 GMT+0500 (Pakistan Standard Time)
[debug] [2025-06-06T10:21:11.202Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-06-06T10:21:11.283Z] Object "/functions" in "firebase.json" has unknown property: {"additionalProperty":"functions"}
[debug] [2025-06-06T10:21:11.284Z] Field "/functions" in "firebase.json" is possibly invalid: must be array
[debug] [2025-06-06T10:21:11.284Z] Field "/functions" in "firebase.json" is possibly invalid: must match a schema in anyOf
[debug] [2025-06-06T10:21:11.286Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-06-06T10:21:11.286Z] > authorizing via signed-in user (safiurrehman74@gmail.com)
[debug] [2025-06-06T10:21:11.286Z] [iam] checking project flexijobber-11a4c for permissions ["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]
[debug] [2025-06-06T10:21:11.287Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:11.287Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:11.287Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions [none]
[debug] [2025-06-06T10:21:11.287Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:11.287Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-06-06T10:21:12.782Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions 200
[debug] [2025-06-06T10:21:12.782Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-06-06T10:21:12.783Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:12.783Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:12.783Z] >>> [apiv2][query] POST https://iam.googleapis.com/v1/projects/flexijobber-11a4c/serviceAccounts/flexijobber-11a4c@appspot.gserviceaccount.com:testIamPermissions [none]
[debug] [2025-06-06T10:21:12.783Z] >>> [apiv2][body] POST https://iam.googleapis.com/v1/projects/flexijobber-11a4c/serviceAccounts/flexijobber-11a4c@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[debug] [2025-06-06T10:21:14.209Z] <<< [apiv2][status] POST https://iam.googleapis.com/v1/projects/flexijobber-11a4c/serviceAccounts/flexijobber-11a4c@appspot.gserviceaccount.com:testIamPermissions 200
[debug] [2025-06-06T10:21:14.210Z] <<< [apiv2][body] POST https://iam.googleapis.com/v1/projects/flexijobber-11a4c/serviceAccounts/flexijobber-11a4c@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[info] 
[info] === Deploying to 'flexijobber-11a4c'...
[info] 
[info] i  deploying functions 
[info] Running command: yarn --cwd "$RESOURCE_DIR" lint
[info] Running command: yarn --cwd "$RESOURCE_DIR" build
[info] ✔  functions: Finished running predeploy script. 
[debug] [2025-06-06T10:21:17.973Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:17.973Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:17.973Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c [none]
[debug] [2025-06-06T10:21:19.492Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c 200
[debug] [2025-06-06T10:21:19.492Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c {"projectNumber":"409931945808","projectId":"flexijobber-11a4c","lifecycleState":"ACTIVE","name":"Flexijobber","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-05-01T18:45:28.685772Z"}
[info] i  functions: preparing codebase default for deployment 
[info] i  functions: ensuring required API cloudfunctions.googleapis.com is enabled... 
[debug] [2025-06-06T10:21:19.496Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:19.496Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:19.496Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:19.496Z] Checked if tokens are valid: true, expires at: 1749208462971
[info] i  functions: ensuring required API cloudbuild.googleapis.com is enabled... 
[debug] [2025-06-06T10:21:19.496Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:19.497Z] Checked if tokens are valid: true, expires at: 1749208462971
[info] i  artifactregistry: ensuring required API artifactregistry.googleapis.com is enabled... 
[debug] [2025-06-06T10:21:19.497Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:19.497Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:19.497Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudfunctions.googleapis.com [none]
[debug] [2025-06-06T10:21:19.497Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudfunctions.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:19.499Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/runtimeconfig.googleapis.com [none]
[debug] [2025-06-06T10:21:19.499Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/runtimeconfig.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:19.501Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudbuild.googleapis.com [none]
[debug] [2025-06-06T10:21:19.501Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudbuild.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:19.503Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/artifactregistry.googleapis.com [none]
[debug] [2025-06-06T10:21:19.503Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/artifactregistry.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:22.471Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/runtimeconfig.googleapis.com 200
[debug] [2025-06-06T10:21:22.471Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/runtimeconfig.googleapis.com [omitted]
[debug] [2025-06-06T10:21:22.512Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudbuild.googleapis.com 200
[debug] [2025-06-06T10:21:22.512Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudbuild.googleapis.com [omitted]
[info] ✔  functions: required API cloudbuild.googleapis.com is enabled 
[debug] [2025-06-06T10:21:22.591Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudfunctions.googleapis.com 200
[debug] [2025-06-06T10:21:22.591Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudfunctions.googleapis.com [omitted]
[info] ✔  functions: required API cloudfunctions.googleapis.com is enabled 
[debug] [2025-06-06T10:21:22.609Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/artifactregistry.googleapis.com 200
[debug] [2025-06-06T10:21:22.610Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/artifactregistry.googleapis.com [omitted]
[info] ✔  artifactregistry: required API artifactregistry.googleapis.com is enabled 
[debug] [2025-06-06T10:21:22.610Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:22.610Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:22.610Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/flexijobber-11a4c/adminSdkConfig [none]
[debug] [2025-06-06T10:21:30.352Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/flexijobber-11a4c/adminSdkConfig 200
[debug] [2025-06-06T10:21:30.353Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/flexijobber-11a4c/adminSdkConfig {"projectId":"flexijobber-11a4c","storageBucket":"flexijobber-11a4c.firebasestorage.app"}
[debug] [2025-06-06T10:21:30.355Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:30.355Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:30.355Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs [none]
[debug] [2025-06-06T10:21:31.683Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs 200
[debug] [2025-06-06T10:21:31.683Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs {"configs":[{"name":"projects/flexijobber-11a4c/configs/emailjs"}]}
[debug] [2025-06-06T10:21:31.684Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:31.684Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:31.685Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables [none]
[debug] [2025-06-06T10:21:32.032Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables 200
[debug] [2025-06-06T10:21:32.032Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables {"variables":[{"name":"projects/flexijobber-11a4c/configs/emailjs/variables/user_id","updateTime":"2025-06-06T10:01:01.354314355Z"},{"name":"projects/flexijobber-11a4c/configs/emailjs/variables/public_key","updateTime":"2025-06-05T18:08:29.581309124Z"},{"name":"projects/flexijobber-11a4c/configs/emailjs/variables/service_id","updateTime":"2025-06-06T10:01:01.222550352Z"},{"name":"projects/flexijobber-11a4c/configs/emailjs/variables/template_id","updateTime":"2025-06-06T10:01:01.272460746Z"}]}
[debug] [2025-06-06T10:21:32.033Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:32.033Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:32.033Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:32.033Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:32.033Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:32.033Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:32.033Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:32.033Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:32.033Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/user_id [none]
[debug] [2025-06-06T10:21:32.034Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/public_key [none]
[debug] [2025-06-06T10:21:32.036Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/service_id [none]
[debug] [2025-06-06T10:21:32.037Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/template_id [none]
[debug] [2025-06-06T10:21:32.360Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/user_id 200
[debug] [2025-06-06T10:21:32.361Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/user_id {"name":"projects/flexijobber-11a4c/configs/emailjs/variables/user_id","updateTime":"2025-06-06T10:01:01.354314355Z","text":"spX-U3xAiU17jg7yz"}
[debug] [2025-06-06T10:21:32.572Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/public_key 200
[debug] [2025-06-06T10:21:32.572Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/public_key {"name":"projects/flexijobber-11a4c/configs/emailjs/variables/public_key","updateTime":"2025-06-05T18:08:29.581309124Z","text":"spX-U3xAiU17jg7yz"}
[debug] [2025-06-06T10:21:32.579Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/service_id 200
[debug] [2025-06-06T10:21:32.579Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/service_id {"name":"projects/flexijobber-11a4c/configs/emailjs/variables/service_id","updateTime":"2025-06-06T10:01:01.222550352Z","text":"service_pxzdz12"}
[debug] [2025-06-06T10:21:32.610Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/template_id 200
[debug] [2025-06-06T10:21:32.610Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/flexijobber-11a4c/configs/emailjs/variables/template_id {"name":"projects/flexijobber-11a4c/configs/emailjs/variables/template_id","updateTime":"2025-06-06T10:01:01.272460746Z","text":"template_ze5clom"}
[debug] [2025-06-06T10:21:32.611Z] Validating nodejs source
[debug] [2025-06-06T10:21:33.630Z] > [functions] package.json contents: {
  "name": "functions",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT",
  "dependencies": {
    "@emailjs/browser": "^4.4.1",
    "dotenv": "^16.5.0",
    "firebase-admin": "^13.4.0",
    "firebase-functions": "^6.3.2"
  },
  "scripts": {
    "lint": "eslint . --no-error-on-unmatched-pattern",
    "serve": "npm run lint && firebase emulators:start --only functions",
    "deploy": "npm run lint && firebase deploy --only functions",
    "build": "npm run lint"
  },
  "devDependencies": {
    "@eslint/js": "^9.28.0",
    "eslint": "8.56.0",
    "eslint-config-google": "^0.14.0",
    "globals": "^16.2.0"
  }
}
[debug] [2025-06-06T10:21:33.631Z] Building nodejs source
[info] i  functions: Loading and analyzing source code for codebase default to determine what to deploy 
[debug] [2025-06-06T10:21:33.632Z] Could not find functions.yaml. Must use http discovery
[debug] [2025-06-06T10:21:33.642Z] Found firebase-functions binary at '/Users/safiurrehman/Upwork/superio/functions/node_modules/.bin/firebase-functions'
[info] Serving at port 8778

[debug] [2025-06-06T10:21:34.438Z] Got response from /__/functions.yaml {"endpoints":{"sendJobAlerts":{"timeoutSeconds":540,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","labels":{},"scheduleTrigger":{"schedule":"every 24 hours","retryConfig":{},"timeZone":"America/New_York"},"entryPoint":"sendJobAlerts"}},"specVersion":"v1alpha1","requiredAPIs":[{"api":"cloudscheduler.googleapis.com","reason":"Needed for scheduled functions."}],"extensions":{}}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2025-06-06T10:21:38.458Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:38.458Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:38.458Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/firebaseextensions.googleapis.com [none]
[debug] [2025-06-06T10:21:38.458Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/firebaseextensions.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:40.177Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/firebaseextensions.googleapis.com 200
[debug] [2025-06-06T10:21:40.178Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/firebaseextensions.googleapis.com [omitted]
[info] ✔  extensions: required API firebaseextensions.googleapis.com is enabled 
[debug] [2025-06-06T10:21:40.179Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-06-06T10:21:40.179Z] > authorizing via signed-in user (safiurrehman74@gmail.com)
[debug] [2025-06-06T10:21:40.179Z] [iam] checking project flexijobber-11a4c for permissions ["firebase.projects.get","firebaseextensions.instances.list"]
[debug] [2025-06-06T10:21:40.179Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:40.179Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:40.179Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions [none]
[debug] [2025-06-06T10:21:40.179Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:40.180Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2025-06-06T10:21:41.762Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions 200
[debug] [2025-06-06T10:21:41.763Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2025-06-06T10:21:41.764Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:41.764Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:41.767Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/flexijobber-11a4c/instances pageSize=100&pageToken=
[debug] [2025-06-06T10:21:43.903Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/flexijobber-11a4c/instances 200
[debug] [2025-06-06T10:21:43.904Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/flexijobber-11a4c/instances {"instances":[{"name":"projects/flexijobber-11a4c/instances/firestore-send-email","createTime":"2025-06-03T17:04:29.233079Z","updateTime":"2025-06-03T17:06:45.017960Z","state":"ERRORED","config":{"name":"projects/flexijobber-11a4c/instances/firestore-send-email/configurations/0b75fb81-db3d-4b16-8049-679632feec52","createTime":"2025-06-03T17:04:29.233079Z","source":{"name":"projects/firebaseextensions/sources/ea1c314a-eed3-4eaf-8f26-863ff7b4ff86","packageUri":"https://storage.googleapis.com/firebase-extensions-packages-prod/firebase-firestore-send-email-0.2.3-81134737-d51a-4479-aa4f-157172da3ae5.zip","hash":"c3ebc8d61081890e95493b0b2d1386dce44f0113a146464c60f6f70da0910d73","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"firestore-send-email","version":"0.2.3","description":"Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read and process added email documents."}],"resources":[{"name":"processQueue","type":"firebaseextensions.v1beta.v2function","propertiesYaml":"buildConfig:\n  runtime: nodejs22\neventTrigger:\n  eventFilters:\n  - attribute: database\n    value: ${DATABASE}\n  - attribute: document\n    operator: match-path-pattern\n    value: ${MAIL_COLLECTION}/{documentId}\n  eventType: google.cloud.firestore.document.v1.written\n  triggerRegion: ${DATABASE_REGION}\nserviceConfig:\n  timeoutSeconds: 120\nsourceDirectory: functions\n","description":"Processes document changes in the specified Cloud Firestore collection, delivers emails, and updates the document with delivery status information.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Michael Bleigh","url":"https://github.com/mbleigh"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/firestore-send-email","params":[{"param":"DATABASE","label":"Firestore Instance ID","type":"STRING","description":"The Firestore database to use. Use \"(default)\" for the default database. You can view your available Firestore databases at [https://console.cloud.google.com/firestore/databases](https://console.cloud.google.com/firestore/databases).\n","required":true,"default":"(default)","example":"(default)"},{"param":"DATABASE_REGION","label":"Firestore Instance Location","type":"SELECT","description":"Where is the Firestore database located? You can check your current database location at [https://console.cloud.google.com/firestore/databases](https://console.cloud.google.com/firestore/databases).\n","required":true,"options":[{"value":"eur3","label":"Multi-region (Europe - Belgium and Netherlands)"},{"value":"nam5","label":"Multi-region (United States)"},{"value":"nam7","label":"Multi-region (Iowa, North Virginia, and Oklahoma)"},{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-east5","label":"Columbus (us-east5)"},{"value":"us-south1","label":"Dallas (us-south1)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"northamerica-northeast2","label":"Toronto (northamerica-northeast2)"},{"value":"northamerica-south1","label":"Queretaro (northamerica-south1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"southamerica-west1","label":"Santiago (southamerica-west1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west4","label":"Netherlands (europe-west4)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"europe-west8","label":"Milan (europe-west8)"},{"value":"europe-west9","label":"Paris (europe-west9)"},{"value":"europe-west10","label":"Berlin (europe-west10)"},{"value":"europe-west12","label":"Turin (europe-west12)"},{"value":"europe-southwest1","label":"Madrid (europe-southwest1)"},{"value":"europe-north1","label":"Finland (europe-north1)"},{"value":"europe-north2","label":"Stockholm (europe-north2)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"me-central1","label":"Doha (me-central1)"},{"value":"me-central2","label":"Dammam (me-central2)"},{"value":"me-west1","label":"Tel Aviv (me-west1)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south2","label":"Delhi (asia-south2)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"},{"value":"australia-southeast2","label":"Melbourne (australia-southeast2)"},{"value":"africa-south1","label":"Johannesburg (africa-south1)"}]},{"param":"AUTH_TYPE","label":"Authentication Type","type":"SELECT","description":"The authentication type to be used for the SMTP server (e.g., OAuth2, Username & Password.","required":true,"options":[{"value":"UsernamePassword","label":"Username & Password"},{"value":"OAuth2","label":"OAuth2"}],"default":"UsernamePassword"},{"param":"SMTP_CONNECTION_URI","label":"SMTP connection URI","type":"STRING","description":"A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and\npassword)","example":"smtps://username@smtp.hostname.com:465","validationRegex":"^(smtp[s]*://(.*?(:[^:@]*)?@)?[^:@]+:[0-9]+(\\?[^ ]*)?)|^$","validationErrorMessage":"Invalid SMTP connection URI. Must be in the form `smtp(s)://username:password@hostname:port` or `smtp(s)://username@hostname:port` or to be left blank."},{"param":"SMTP_PASSWORD","label":"SMTP password","type":"SECRET","description":"User password for the SMTP server"},{"param":"HOST","label":"OAuth2 SMTP Host","type":"STRING","description":"The OAuth2 hostname of the SMTP server (e.g., smtp.gmail.com)."},{"param":"OAUTH_PORT","label":"OAuth2 SMTP Port","type":"STRING","description":"The OAuth2 port number for the SMTP server (e.g., 465 for SMTPS, 587 for STARTTLS).","default":"465"},{"param":"OAUTH_SECURE","label":"Use secure OAuth2 connection?","type":"SELECT","description":"Set to true to enable a secure connection (TLS/SSL) when using OAuth2 authentication for the SMTP server.","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"},{"param":"CLIENT_ID","label":"OAuth2 Client ID","type":"SECRET","description":"The OAuth2 Client ID for authentication with the SMTP server."},{"param":"CLIENT_SECRET","label":"OAuth2 Client Secret","type":"SECRET","description":"The OAuth2 Client Secret for authentication with the SMTP server."},{"param":"REFRESH_TOKEN","label":"OAuth2 Refresh Token","type":"SECRET","description":"The OAuth2 Refresh Token for authentication with the SMTP server."},{"param":"USER","label":"OAuth2 SMTP User","type":"STRING","description":"The OAuth2 user email or username for SMTP authentication."},{"param":"MAIL_COLLECTION","label":"Email documents collection","type":"STRING","description":"What is the path to the collection that contains the documents used to build and send the emails?","required":true,"default":"mail","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Must be a valid Cloud Firestore collection"},{"param":"DEFAULT_FROM","label":"Default FROM address","type":"STRING","description":"The email address to use as the sender's address (if it's not specified in the added email document). You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`). This parameter does not work with [Gmail SMTP](https://nodemailer.com/usage/using-gmail/).","required":true,"example":"foobar@example.com","validationRegex":"^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$|^.*<(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})>$","validationErrorMessage":"Must be a valid email address or valid name plus email address"},{"param":"DEFAULT_REPLY_TO","label":"Default REPLY-TO address","type":"STRING","description":"The email address to use as the reply-to address (if it's not specified in the added email document)."},{"param":"USERS_COLLECTION","label":"Users collection","type":"STRING","description":"A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection."},{"param":"TEMPLATES_COLLECTION","label":"Templates collection","type":"STRING","description":"A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, it's recommended to use triple curly braces `{{{  }}}` in your Handlebars templates when the substitution value is a URL or otherwise sensitive to HTML escaping."},{"param":"TTL_EXPIRE_TYPE","label":"Firestore TTL type","type":"SELECT","description":"Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".","required":true,"options":[{"value":"never","label":"Never"},{"value":"hour","label":"Hour"},{"value":"day","label":"Day"},{"value":"week","label":"Week"},{"value":"month","label":"Month"},{"value":"year","label":"Year"}],"default":"never"},{"param":"TTL_EXPIRE_VALUE","label":"Firestore TTL value","type":"STRING","description":"In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.","required":true,"default":"1","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"The value must be an integer value greater than zero."},{"param":"TLS_OPTIONS","label":"TLS Options","type":"STRING","description":"A JSON value representing TLS options. For more information, see https://nodejs.org/api/tls.html#tls_class_tls_tlssocket"}],"preinstallContent":"Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Firestore-Send-Email: SendGrid Categories\n\nWhen using SendGrid (`SMTP_CONNECTION_URI` includes `sendgrid.net`), you can assign categories to your emails.\n\n## Example JSON with Categories:\n```json\n{\n  \"to\": [\"example@example.com\"],\n  \"categories\": [\"Example_Category\"],\n  \"message\": {\n    \"subject\": \"Test Email with Categories\",\n    \"text\": \"This is a test email to see if categories work.\",\n    \"html\": \"<strong>This is a test email to see if categories work.</strong>\"\n  }\n}\n```\n\nAdd this document to the Firestore mail collection to send categorized emails.\n\nFor more details, see the [SendGrid Categories documentation](https://docs.sendgrid.com/ui/sending-email/categories).\n\n#### Firestore-Send-Email: SendGrid Dynamic Templates\n\nWhen using SendGrid, you can use SendGrid Dynamic Templates to create and send templated emails.\n\n## Example JSON representation of Firestore document for a Dynamic Template:\n```json\n{\n  \"to\": [\"example@example.com\"],\n  \"sendGrid\": {\n    \"templateId\": \"d-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",  // SendGrid Dynamic Template ID always starts with 'd-'\n    \"dynamicTemplateData\": {\n      \"name\": \"John Doe\",\n      \"company\": \"Example Corp\",\n      \"position\": \"Developer\"\n    }\n  }\n}\n```\n\nAdd this document to the Firestore mail collection to send an email using a SendGrid Dynamic Template. The `templateId` is required and should be your SendGrid Dynamic Template ID (always starts with 'd-'). The `dynamicTemplateData` object contains the variables that will be used in your template.\n\nFor more details, see the [SendGrid Dynamic Templates documentation](https://docs.sendgrid.com/ui/sending-email/how-to-send-an-email-with-dynamic-templates).\n\n#### Setting Up OAuth2 Authentication\n\nThis section will help you set up OAuth2 authentication for the extension, using GCP (Gmail) as an example.\n\nThe extension is agnostic with respect to OAuth2 provider. You just need to provide it with valid Client ID, Client Secret, and Refresh Token parameters.\n\n##### Step 1: Create OAuth Credentials in Google Cloud Platform\n\n1. Go to the [Google Cloud Console](https://console.cloud.google.com/)\n2. Select your project\n3. In the left sidebar, navigate to **APIs & Services > Credentials**\n4. Click Create Credentials and select **OAuth client ID**\n5. Set the application type to **Web application**\n6. Give your OAuth client a name (e.g., \"Firestore Send Email Extension\")\n7. Under **Authorized redirect URIs**, add the URI where you'll receive the OAuth callback, for example, `http://localhost:8080/oauth/callback`.\n\n   **Note**: The redirect URI in your OAuth client settings MUST match exactly the callback URL in your code.\n\n8. Click **Create**.\n\n##### Step 2: Configure OAuth Consent Screen\n\n1. In Google Cloud Console, go to **APIs & Services > OAuth consent screen**\n2. Choose the appropriate user type:\n   - **External**: For applications used by any Google user\n   - **Internal**: For applications used only by users in your organization\n\n> **Important Note**: If your OAuth consent screen is in \"Testing\" status, refresh tokens will expire after 7 days unless the User Type is set to \"Internal.\"\n\n##### Step 3: Generate a Refresh Token\n\nYou can use a standalone helper script (`oauth2-refresh-token-helper.js`) that generates a refresh token without requiring any npm installations. \n\n**Prerequisites:**\n- You must have Node.js installed on your machine\n\n**Download the script:**\n1. Download the script using curl, wget, or directly from your browser:\n   ```bash\n   # Using curl\n   curl -o oauth2-refresh-token-helper.js https://raw.githubusercontent.com/firebase/extensions/refs/heads/master/firestore-send-email/scripts/oauth2-refresh-token-helper.js\n   \n   # Using wget\n   wget https://raw.githubusercontent.com/firebase/extensions/refs/heads/master/firestore-send-email/scripts/oauth2-refresh-token-helper.js\n   ```\n\n   You can also [view the script on GitHub](https://github.com/firebase/extensions/blob/master/firestore-send-email/scripts/oauth2-refresh-token-helper.js) and download it manually.\n\n> **Note**: If you are creating your own application to obtain a refresh token, in a Node.js environment where you can use npm packages, consider using the official google-auth-library instead:\n> \n> 1. Install the library: `npm install google-auth-library`\n> 2. Then use it like this:\n>    ```javascript\n>    import { OAuth2Client } from \"google-auth-library\";\n>    \n>    // Initialize OAuth client\n>    const oAuth2Client = new OAuth2Client(CLIENT_ID, CLIENT_SECRET, REDIRECT_URI);\n>    \n>    // Generate authorization URL\n>    const authorizeUrl = oAuth2Client.generateAuthUrl({\n>      access_type: \"offline\",\n>      prompt: \"consent\",\n>      scope: [\"https://mail.google.com/\"],  // Full Gmail access\n>    });\n>    \n>    // After receiving the code from the callback:\n>    const { tokens } = await oAuth2Client.getToken(code);\n>    const refreshToken = tokens.refresh_token;\n>    ```\n\n2. Run the script with Node.js:\n\n   ```bash\n   node oauth2-refresh-token-helper.js\n   ```\n\n3. The script supports the following command-line options:\n   ```\n   --port, -p     Port to run the server on (default: 8080 or PORT env var)\n   --id, -i       Google OAuth Client ID\n   --secret, -s   Google OAuth Client Secret\n   --output, -o   Output file to save the refresh token (default: refresh_token.txt)\n   --help, -h     Show help information\n   ```\n\n4. You can either provide your credentials as command-line arguments or set them as environment variables:\n   ```bash\n   # Using environment variables\n   export CLIENT_ID=your_client_id\n   export CLIENT_SECRET=your_client_secret\n   node oauth2-refresh-token-helper.js\n\n   # Using command-line arguments\n   node oauth2-refresh-token-helper.js --id=your_client_id --secret=your_client_secret\n   ```\n\n5. The script will:\n   - Start a local web server\n   - Open your browser to the OAuth consent page\n   - Receive the authorization code\n   - Exchange the code for tokens\n   - Save the refresh token to a file (default: `refresh_token.txt`)\n   - Display the refresh token in your browser\n\n6. **Important**: The redirect URI in the script (`http://localhost:8080/oauth/callback` by default) **MUST** match exactly what you configured in the Google Cloud Console OAuth client settings.\n\n7. The script automatically requests the appropriate scope for Gmail access (`https://mail.google.com/`) and sets the authorization parameters to always receive a refresh token (`access_type: \"offline\"` and `prompt: \"consent\"`).\n\n##### Step 4: Configure the Firestore Send Email Extension\n\nWhen installing the extension, select \"OAuth2\" as the **Authentication Type** and provide the following parameters:\n\n- **OAuth2 SMTP Host**: `smtp.gmail.com` (for Gmail)\n- **OAuth2 SMTP Port**: `465` (for SMTPS) or `587` (for STARTTLS)\n- **Use Secure OAuth2 Connection**: `true` (for port 465) or `false` (for port 587)\n- **OAuth2 Client ID**: Your Client ID from GCP\n- **OAuth2 Client Secret**: Your Client Secret from GCP\n- **OAuth2 Refresh Token**: The refresh token generated in Step 3\n- **SMTP User**: Your full Gmail email address\n\nLeave `Use secure OAuth2 connection?` as the default value `true`.\n\n##### Troubleshooting\n\n###### Refresh Token Expiration\n\n- **Testing Status**: If your OAuth consent screen is in \"Testing\" status, refresh tokens expire after 7 days unless User Type is set to \"Internal\"\n- **Solution**: Either publish your app or ensure User Type is set to \"Internal\" in the OAuth consent screen settings\n\n###### No Refresh Token Received\n\n- **Problem**: If you don't receive a refresh token during the OAuth flow\n- **Solution**: Make sure you've revoked previous access or forced consent by going to [Google Account Security](https://myaccount.google.com/security) > Third-party apps with account access\n\n###### Scope Issues\n\n- **Problem**: If you see authentication errors, you might not have the correct scopes\n- **Solution**: Ensure you've added `https://mail.google.com/` as a scope in the OAuth consent screen\n\n###### Additional Resources\n\n- [Google OAuth2 Documentation](https://developers.google.com/identity/protocols/oauth2)\n- [Nodemailer OAuth2 Guide](https://nodemailer.com/smtp/oauth2/)\n- [Firebase Extensions Documentation](https://firebase.google.com/docs/extensions)\n\n#### Automatic Deletion of Email Documents\n\nTo use Firestore's TTL feature for automatic deletion of expired email documents, the extension provides several configuration parameters.\n\nThe extension will set a TTL field in the email documents, but you will need to manually configure a TTL policy for the collection/collection group the extension targets, on the `delivery.expireAt` field.\n\nDetailed instructions for creating a TTL field can be found in the [Firestore TTL Policy documentation](https://firebase.google.com/docs/firestore/ttl).\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service's no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/firestore/data) in the Firebase console. Note that, if you have configured a non-default firestore database, you may have to view it via the [Google Cloud Console](https://console.cloud.google.com/firestore/databases/${param:DATABASE}).\n\n1.  If it doesn't already exist, create the collection you specified during installation: `${param:MAIL_COLLECTION}`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"${param:MAIL_COLLECTION}\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n#### Firestore-Send-Email: SendGrid Categories\n\nWhen using SendGrid (`SMTP_CONNECTION_URI` includes `sendgrid.net`), you can assign categories to your emails.\n\n##### Example JSON with Categories:\n```json\n{\n  \"to\": [\"example@example.com\"],\n  \"categories\": [\"Example_Category\"],\n  \"message\": {\n    \"subject\": \"Test Email with Categories\",\n    \"text\": \"This is a test email to see if categories work.\",\n    \"html\": \"<strong>This is a test email to see if categories work.</strong>\"\n  }\n}\n```\n\nAdd this document to the Firestore mail collection to send categorized emails.\n\nFor more details, see the [SendGrid Categories documentation](https://docs.sendgrid.com/ui/sending-email/categories).\n\n#### Firestore-Send-Email: SendGrid Dynamic Templates\n\nWhen using SendGrid, you can use SendGrid Dynamic Templates to create and send templated emails.\n\n## Example JSON representation of Firestore document for a Dynamic Template:\n```json\n{\n  \"to\": [\"example@example.com\"],\n  \"sendGrid\": {\n    \"templateId\": \"d-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"dynamicTemplateData\": {\n      \"name\": \"John Doe\",\n      \"company\": \"Example Corp\",\n      \"position\": \"Developer\"\n    }\n  }\n}\n```\n\nAdd this document to the Firestore mail collection to send an email using a SendGrid Dynamic Template. The `templateId` is required and should be your SendGrid Dynamic Template ID (always starts with 'd-'). The `dynamicTemplateData` object contains the variables that will be used in your template.\n\nFor more details, see the [SendGrid Dynamic Templates documentation](https://docs.sendgrid.com/ui/sending-email/how-to-send-an-email-with-dynamic-templates).\n\n#### Understanding SendGrid Email IDs\n\nWhen an email is sent successfully, the extension tracks two different IDs in the delivery information:\n\n- **Queue ID**: This is SendGrid's internal queue identifier (from the `x-message-id` header). It's useful for tracking the email within SendGrid's system.\n- **Message ID**: This is the RFC-2822 Message-ID header, which is a standard email identifier used across email systems.\n\nYou can find both IDs in the `delivery.info` field of your email document after successful delivery:\n\n```json\n{\n  \"delivery\": {\n    \"info\": {\n      \"messageId\": \"<unique-message-id@your-domain.com>\",\n      \"sendgridQueueId\": \"sendgrid-queue-id\",\n      \"accepted\": [\"recipient@example.com\"],\n      \"rejected\": [],\n      \"pending\": [],\n      \"response\": \"status=202\"\n    }\n  }\n}\n```\n\n### Automatic Deletion of Email Documents\n\nTo use Firestore's TTL feature for automatic deletion of expired email documents, the extension provides several configuration parameters.\n\nThe extension will set a TTL field in the email documents, but you will need to manually configure a TTL policy for the collection/collection group the extension targets, on the `delivery.expireAt` field.\n\nDetailed instructions for creating a TTL field can be found in the [Firestore TTL Policy documentation](https://firebase.google.com/docs/firestore/ttl).\n\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2F${param:MAIL_COLLECTION}\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","readmeContent":"# Trigger Email from Firestore\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Composes and sends an email based on the contents of a document written to a specified Cloud Firestore collection.\n\n\n\n**Details**: Use this extension to render and send emails that contain the information from documents added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to send an email built from the document's fields. The document's top-level fields specify the email sender and recipients, including `to`, `cc`, and `bcc` options (each supporting UIDs). The document's `message` field specifies the other email elements, like subject line and email body (either plaintext or HTML)\n\nHere's a basic example document write that would trigger this extension:\n\n```js\nadmin.firestore().collection('mail').add({\n  to: 'someone@example.com',\n  message: {\n    subject: 'Hello from Firebase!',\n    html: 'This is an <code>HTML</code> email body.',\n  },\n})\n```\n\nYou can also optionally configure this extension to render emails using [Handlebar](https://handlebarsjs.com/) templates. Each template is a document stored in a Cloud Firestore collection.\n\nWhen you configure this extension, you'll need to supply your **SMTP credentials for mail delivery**. Note that this extension is for use with bulk email service providers, like SendGrid, Mailgun, etc.\n\n#### Firestore-Send-Email: SendGrid Categories\n\nWhen using SendGrid (`SMTP_CONNECTION_URI` includes `sendgrid.net`), you can assign categories to your emails.\n\n## Example JSON with Categories:\n```json\n{\n  \"to\": [\"example@example.com\"],\n  \"categories\": [\"Example_Category\"],\n  \"message\": {\n    \"subject\": \"Test Email with Categories\",\n    \"text\": \"This is a test email to see if categories work.\",\n    \"html\": \"<strong>This is a test email to see if categories work.</strong>\"\n  }\n}\n```\n\nAdd this document to the Firestore mail collection to send categorized emails.\n\nFor more details, see the [SendGrid Categories documentation](https://docs.sendgrid.com/ui/sending-email/categories).\n\n#### Firestore-Send-Email: SendGrid Dynamic Templates\n\nWhen using SendGrid, you can use SendGrid Dynamic Templates to create and send templated emails.\n\n## Example JSON representation of Firestore document for a Dynamic Template:\n```json\n{\n  \"to\": [\"example@example.com\"],\n  \"sendGrid\": {\n    \"templateId\": \"d-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",  // SendGrid Dynamic Template ID always starts with 'd-'\n    \"dynamicTemplateData\": {\n      \"name\": \"John Doe\",\n      \"company\": \"Example Corp\",\n      \"position\": \"Developer\"\n    }\n  }\n}\n```\n\nAdd this document to the Firestore mail collection to send an email using a SendGrid Dynamic Template. The `templateId` is required and should be your SendGrid Dynamic Template ID (always starts with 'd-'). The `dynamicTemplateData` object contains the variables that will be used in your template.\n\nFor more details, see the [SendGrid Dynamic Templates documentation](https://docs.sendgrid.com/ui/sending-email/how-to-send-an-email-with-dynamic-templates).\n\n#### Setting Up OAuth2 Authentication\n\nThis section will help you set up OAuth2 authentication for the extension, using GCP (Gmail) as an example.\n\nThe extension is agnostic with respect to OAuth2 provider. You just need to provide it with valid Client ID, Client Secret, and Refresh Token parameters.\n\n##### Step 1: Create OAuth Credentials in Google Cloud Platform\n\n1. Go to the [Google Cloud Console](https://console.cloud.google.com/)\n2. Select your project\n3. In the left sidebar, navigate to **APIs & Services > Credentials**\n4. Click Create Credentials and select **OAuth client ID**\n5. Set the application type to **Web application**\n6. Give your OAuth client a name (e.g., \"Firestore Send Email Extension\")\n7. Under **Authorized redirect URIs**, add the URI where you'll receive the OAuth callback, for example, `http://localhost:8080/oauth/callback`.\n\n   **Note**: The redirect URI in your OAuth client settings MUST match exactly the callback URL in your code.\n\n8. Click **Create**.\n\n##### Step 2: Configure OAuth Consent Screen\n\n1. In Google Cloud Console, go to **APIs & Services > OAuth consent screen**\n2. Choose the appropriate user type:\n   - **External**: For applications used by any Google user\n   - **Internal**: For applications used only by users in your organization\n\n> **Important Note**: If your OAuth consent screen is in \"Testing\" status, refresh tokens will expire after 7 days unless the User Type is set to \"Internal.\"\n\n##### Step 3: Generate a Refresh Token\n\nYou can use a standalone helper script (`oauth2-refresh-token-helper.js`) that generates a refresh token without requiring any npm installations. \n\n**Prerequisites:**\n- You must have Node.js installed on your machine\n\n**Download the script:**\n1. Download the script using curl, wget, or directly from your browser:\n   ```bash\n   # Using curl\n   curl -o oauth2-refresh-token-helper.js https://raw.githubusercontent.com/firebase/extensions/refs/heads/master/firestore-send-email/scripts/oauth2-refresh-token-helper.js\n   \n   # Using wget\n   wget https://raw.githubusercontent.com/firebase/extensions/refs/heads/master/firestore-send-email/scripts/oauth2-refresh-token-helper.js\n   ```\n\n   You can also [view the script on GitHub](https://github.com/firebase/extensions/blob/master/firestore-send-email/scripts/oauth2-refresh-token-helper.js) and download it manually.\n\n> **Note**: If you are creating your own application to obtain a refresh token, in a Node.js environment where you can use npm packages, consider using the official google-auth-library instead:\n> \n> 1. Install the library: `npm install google-auth-library`\n> 2. Then use it like this:\n>    ```javascript\n>    import { OAuth2Client } from \"google-auth-library\";\n>    \n>    // Initialize OAuth client\n>    const oAuth2Client = new OAuth2Client(CLIENT_ID, CLIENT_SECRET, REDIRECT_URI);\n>    \n>    // Generate authorization URL\n>    const authorizeUrl = oAuth2Client.generateAuthUrl({\n>      access_type: \"offline\",\n>      prompt: \"consent\",\n>      scope: [\"https://mail.google.com/\"],  // Full Gmail access\n>    });\n>    \n>    // After receiving the code from the callback:\n>    const { tokens } = await oAuth2Client.getToken(code);\n>    const refreshToken = tokens.refresh_token;\n>    ```\n\n2. Run the script with Node.js:\n\n   ```bash\n   node oauth2-refresh-token-helper.js\n   ```\n\n3. The script supports the following command-line options:\n   ```\n   --port, -p     Port to run the server on (default: 8080 or PORT env var)\n   --id, -i       Google OAuth Client ID\n   --secret, -s   Google OAuth Client Secret\n   --output, -o   Output file to save the refresh token (default: refresh_token.txt)\n   --help, -h     Show help information\n   ```\n\n4. You can either provide your credentials as command-line arguments or set them as environment variables:\n   ```bash\n   # Using environment variables\n   export CLIENT_ID=your_client_id\n   export CLIENT_SECRET=your_client_secret\n   node oauth2-refresh-token-helper.js\n\n   # Using command-line arguments\n   node oauth2-refresh-token-helper.js --id=your_client_id --secret=your_client_secret\n   ```\n\n5. The script will:\n   - Start a local web server\n   - Open your browser to the OAuth consent page\n   - Receive the authorization code\n   - Exchange the code for tokens\n   - Save the refresh token to a file (default: `refresh_token.txt`)\n   - Display the refresh token in your browser\n\n6. **Important**: The redirect URI in the script (`http://localhost:8080/oauth/callback` by default) **MUST** match exactly what you configured in the Google Cloud Console OAuth client settings.\n\n7. The script automatically requests the appropriate scope for Gmail access (`https://mail.google.com/`) and sets the authorization parameters to always receive a refresh token (`access_type: \"offline\"` and `prompt: \"consent\"`).\n\n##### Step 4: Configure the Firestore Send Email Extension\n\nWhen installing the extension, select \"OAuth2\" as the **Authentication Type** and provide the following parameters:\n\n- **OAuth2 SMTP Host**: `smtp.gmail.com` (for Gmail)\n- **OAuth2 SMTP Port**: `465` (for SMTPS) or `587` (for STARTTLS)\n- **Use Secure OAuth2 Connection**: `true` (for port 465) or `false` (for port 587)\n- **OAuth2 Client ID**: Your Client ID from GCP\n- **OAuth2 Client Secret**: Your Client Secret from GCP\n- **OAuth2 Refresh Token**: The refresh token generated in Step 3\n- **SMTP User**: Your full Gmail email address\n\nLeave `Use secure OAuth2 connection?` as the default value `true`.\n\n##### Troubleshooting\n\n###### Refresh Token Expiration\n\n- **Testing Status**: If your OAuth consent screen is in \"Testing\" status, refresh tokens expire after 7 days unless User Type is set to \"Internal\"\n- **Solution**: Either publish your app or ensure User Type is set to \"Internal\" in the OAuth consent screen settings\n\n###### No Refresh Token Received\n\n- **Problem**: If you don't receive a refresh token during the OAuth flow\n- **Solution**: Make sure you've revoked previous access or forced consent by going to [Google Account Security](https://myaccount.google.com/security) > Third-party apps with account access\n\n###### Scope Issues\n\n- **Problem**: If you see authentication errors, you might not have the correct scopes\n- **Solution**: Ensure you've added `https://mail.google.com/` as a scope in the OAuth consent screen\n\n###### Additional Resources\n\n- [Google OAuth2 Documentation](https://developers.google.com/identity/protocols/oauth2)\n- [Nodemailer OAuth2 Guide](https://nodemailer.com/smtp/oauth2/)\n- [Firebase Extensions Documentation](https://firebase.google.com/docs/extensions)\n\n#### Automatic Deletion of Email Documents\n\nTo use Firestore's TTL feature for automatic deletion of expired email documents, the extension provides several configuration parameters.\n\nThe extension will set a TTL field in the email documents, but you will need to manually configure a TTL policy for the collection/collection group the extension targets, on the `delivery.expireAt` field.\n\nDetailed instructions for creating a TTL field can be found in the [Firestore TTL Policy documentation](https://firebase.google.com/docs/firestore/ttl).\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service's no-cost tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\nUsage of this extension also requires you to have SMTP credentials for mail delivery. You are responsible for any associated costs with your usage of your SMTP provider.\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)\n\n\n\n**Configuration Parameters:**\n\n* Firestore Instance ID: The Firestore database to use. Use \"(default)\" for the default database. You can view your available Firestore databases at [https://console.cloud.google.com/firestore/databases](https://console.cloud.google.com/firestore/databases).\n\n\n* Firestore Instance Location: Where is the Firestore database located? You can check your current database location at [https://console.cloud.google.com/firestore/databases](https://console.cloud.google.com/firestore/databases).\n\n\n* Authentication Type: The authentication type to be used for the SMTP server (e.g., OAuth2, Username & Password.\n\n* SMTP connection URI: A URI representing an SMTP server this extension can use to deliver email. Note that port 25 is blocked by Google Cloud Platform, so we recommend using port 587 for SMTP connections. If you're using the SMTPS protocol, we recommend using port 465. In order to keep passwords secure, it is recommended to omit the password from the connection string while using the `SMTP Password` field for entering secrets and passwords. Passwords and secrets should now be included in `SMTP password` field.\nSecure format:\n `smtps://username@gmail.com@smtp.gmail.com:465` (username only)\n `smtps://smtp.gmail.com:465` (No username and password)\nBackwards Compatible (less secure):\n `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and\npassword)\n\n* SMTP password: User password for the SMTP server\n\n* OAuth2 SMTP Host: The OAuth2 hostname of the SMTP server (e.g., smtp.gmail.com).\n\n* OAuth2 SMTP Port: The OAuth2 port number for the SMTP server (e.g., 465 for SMTPS, 587 for STARTTLS).\n\n* Use secure OAuth2 connection?: Set to true to enable a secure connection (TLS/SSL) when using OAuth2 authentication for the SMTP server.\n\n* OAuth2 Client ID: The OAuth2 Client ID for authentication with the SMTP server.\n\n* OAuth2 Client Secret: The OAuth2 Client Secret for authentication with the SMTP server.\n\n* OAuth2 Refresh Token: The OAuth2 Refresh Token for authentication with the SMTP server.\n\n* OAuth2 SMTP User: The OAuth2 user email or username for SMTP authentication.\n\n* Email documents collection: What is the path to the collection that contains the documents used to build and send the emails?\n\n* Default FROM address: The email address to use as the sender's address (if it's not specified in the added email document). You can optionally include a name with the email address (`Friendly Firebaser <foobar@example.com>`). This parameter does not work with [Gmail SMTP](https://nodemailer.com/usage/using-gmail/).\n\n* Default REPLY-TO address: The email address to use as the reply-to address (if it's not specified in the added email document).\n\n* Users collection: A collection of documents keyed by user UID. If the `toUids`, `ccUids`, and/or `bccUids` recipient options are used in the added email document, this extension delivers email to the `email` field based on lookups in this collection.\n\n* Templates collection: A collection of email templates keyed by name. This extension can render an email using a [Handlebar](https://handlebarsjs.com/) template, it's recommended to use triple curly braces `{{{  }}}` in your Handlebars templates when the substitution value is a URL or otherwise sensitive to HTML escaping.\n\n* Firestore TTL type: Do you want the firestore records to be marked with an expireAt field for a TTL policy? If \"Never\" is selected then no expireAt field will be added. Otherwise you may specify the unit of time specified by the TTL_EXPIRE_VALUE parameter. Defaults to \"Never\".\n\n* Firestore TTL value: In the units specified by TTL_EXPIRE_TYPE, how long do you want records to be ineligible for deletion by a TTL policy? This parameter requires the Firestore TTL type parameter to be set to a value other than `Never`. For example, if `Firestore TTL type` is set to `Day` then setting this parameter to `1` will specify a TTL of 1 day.\n\n* TLS Options: A JSON value representing TLS options. For more information, see https://nodejs.org/api/tls.html#tls_class_tls_tlssocket\n\n\n\n**Other Resources**:\n\n* processQueue (firebaseextensions.v1beta.v2function)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added email documents.)\n","displayName":"Trigger Email from Firestore","events":[{"type":"firebase.extensions.firestore-send-email.v1.onStart","description":"Occurs when the extension starts execution."},{"type":"firebase.extensions.firestore-send-email.v1.onProcessing","description":"Occurs when the extension attempts to process an email."},{"type":"firebase.extensions.firestore-send-email.v1.onRetry","description":"Occurs when the extension attempts to resend an email."},{"type":"firebase.extensions.firestore-send-email.v1.onPending","description":"Occurs when an email has a pending status."},{"type":"firebase.extensions.firestore-send-email.v1.onSuccess","description":"Occurs when the extension successfully sends an email."},{"type":"firebase.extensions.firestore-send-email.v1.onComplete","description":"Occurs when the extension completes execution."},{"type":"firebase.extensions.firestore-send-email.v1.onError","description":"Occurs when the extension fails to complete execution."}]},"fetchTime":"2025-05-30T08:39:13.273923Z","lastOperationName":"projects/firebaseextensions/operations/af49ee98-2ec9-48f1-9662-2b5ed039d127","state":"ACTIVE"},"params":{"DEFAULT_FROM":"safiurrehman74@gmail.com","TTL_EXPIRE_TYPE":"never","OAUTH_PORT":"465","OAUTH_SECURE":"true","MAIL_COLLECTION":"mail","AUTH_TYPE":"UsernamePassword","TTL_EXPIRE_VALUE":"1","DATABASE":"(default)","DATABASE_REGION":"eur3"},"populatedPostinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Cloud Firestore dashboard](https://console.firebase.google.com/project/flexijobber-11a4c/firestore/data) in the Firebase console. Note that, if you have configured a non-default firestore database, you may have to view it via the [Google Cloud Console](https://console.cloud.google.com/firestore/databases/(default)).\n\n1.  If it doesn't already exist, create the collection you specified during installation: `mail`.\n\n1.  Add a document with a `to` field and a `message` field with the following content:\n\n    ```js\n    to: ['someone@example.com'],\n    message: {\n      subject: 'Hello from Firebase!',\n      text: 'This is the plaintext section of the email body.',\n      html: 'This is the <code>HTML</code> section of the email body.',\n    }\n    ```\n\n1.  In a few seconds, you'll see a `delivery` field appear in the document. The field will update as the extension processes the email.\n\n**Note:** You can also use the [Firebase Admin SDK][admin_sdk] to add a document:\n\n```js\nadmin\n  .firestore()\n  .collection(\"mail\")\n  .add({\n    to: \"someone@example.com\",\n    message: {\n      subject: \"Hello from Firebase!\",\n      text: \"This is the plaintext section of the email body.\",\n      html: \"This is the <code>HTML</code> section of the email body.\",\n    },\n  })\n  .then(() => console.log(\"Queued email for delivery!\"));\n```\n\n### Using this extension\n\nSee the [official documentation](https://firebase.google.com/docs/extensions/official/firestore-send-email) for information on using this extension, including advanced use cases such as using Handlebars templates and managing email delivery status.\n\n#### Firestore-Send-Email: SendGrid Categories\n\nWhen using SendGrid (`SMTP_CONNECTION_URI` includes `sendgrid.net`), you can assign categories to your emails.\n\n##### Example JSON with Categories:\n```json\n{\n  \"to\": [\"example@example.com\"],\n  \"categories\": [\"Example_Category\"],\n  \"message\": {\n    \"subject\": \"Test Email with Categories\",\n    \"text\": \"This is a test email to see if categories work.\",\n    \"html\": \"<strong>This is a test email to see if categories work.</strong>\"\n  }\n}\n```\n\nAdd this document to the Firestore mail collection to send categorized emails.\n\nFor more details, see the [SendGrid Categories documentation](https://docs.sendgrid.com/ui/sending-email/categories).\n\n#### Firestore-Send-Email: SendGrid Dynamic Templates\n\nWhen using SendGrid, you can use SendGrid Dynamic Templates to create and send templated emails.\n\n## Example JSON representation of Firestore document for a Dynamic Template:\n```json\n{\n  \"to\": [\"example@example.com\"],\n  \"sendGrid\": {\n    \"templateId\": \"d-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"dynamicTemplateData\": {\n      \"name\": \"John Doe\",\n      \"company\": \"Example Corp\",\n      \"position\": \"Developer\"\n    }\n  }\n}\n```\n\nAdd this document to the Firestore mail collection to send an email using a SendGrid Dynamic Template. The `templateId` is required and should be your SendGrid Dynamic Template ID (always starts with 'd-'). The `dynamicTemplateData` object contains the variables that will be used in your template.\n\nFor more details, see the [SendGrid Dynamic Templates documentation](https://docs.sendgrid.com/ui/sending-email/how-to-send-an-email-with-dynamic-templates).\n\n#### Understanding SendGrid Email IDs\n\nWhen an email is sent successfully, the extension tracks two different IDs in the delivery information:\n\n- **Queue ID**: This is SendGrid's internal queue identifier (from the `x-message-id` header). It's useful for tracking the email within SendGrid's system.\n- **Message ID**: This is the RFC-2822 Message-ID header, which is a standard email identifier used across email systems.\n\nYou can find both IDs in the `delivery.info` field of your email document after successful delivery:\n\n```json\n{\n  \"delivery\": {\n    \"info\": {\n      \"messageId\": \"<unique-message-id@your-domain.com>\",\n      \"sendgridQueueId\": \"sendgrid-queue-id\",\n      \"accepted\": [\"recipient@example.com\"],\n      \"rejected\": [],\n      \"pending\": [],\n      \"response\": \"status=202\"\n    }\n  }\n}\n```\n\n### Automatic Deletion of Email Documents\n\nTo use Firestore's TTL feature for automatic deletion of expired email documents, the extension provides several configuration parameters.\n\nThe extension will set a TTL field in the email documents, but you will need to manually configure a TTL policy for the collection/collection group the extension targets, on the `delivery.expireAt` field.\n\nDetailed instructions for creating a TTL field can be found in the [Firestore TTL Policy documentation](https://firebase.google.com/docs/firestore/ttl).\n\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n[mail_collection]: https://console.firebase.google.com/project/_/firestore/data~2Fmail\n[admin_sdk]: https://firebase.google.com/docs/admin/setup\n[amp4email]: https://amp.dev/documentation/guides-and-tutorials/learn/email-spec/amp-email-format/\n[handlebars]: https://handlebarsjs.com/\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Sending Emails Using Firestore And Firebase Extensions](https://invertase.link/Y6Nu)","extensionRef":"firebase/firestore-send-email","extensionVersion":"0.2.3","systemParams":{"firebaseextensions.v1beta.function/minInstances":"0","firebaseextensions.v1beta.function/location":"europe-west1","firebaseextensions.v1beta.v2function/memory":"256Mi","firebaseextensions.v1beta.function/vpcConnectorEgressSettings":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"}},"errorStatus":{"code":13,"message":"; RESOURCE_ERROR at /deployments/firebase-ext-firestore-send-email/resources/processQueue: {\"ResourceType\":\"gcp-types/cloudfunctions-v2beta:projects.locations.functions\",\"ResourceErrorCode\":\"400\",\"ResourceErrorMessage\":{\"code\":400,\"message\":\"Validation failed for trigger projects/flexijobber-11a4c/locations/eur3/triggers/ext-firestore-send-email-processqueue-909093: The request was invalid: generic::invalid_argument: Database '(default)' does not exist in region 'eur3'. Did you mean region 'europe-west1'?. See 'gcloud firestore https://cloud.google.com/sdk/gcloud/reference/firestore/databases/list to list all Firestore databases under the project.\",\"status\":\"INVALID_ARGUMENT\",\"statusMessage\":\"Bad Request\",\"requestPath\":\"https://cloudfunctions.googleapis.com/v2beta/projects/flexijobber-11a4c/locations/europe-west1/functions\",\"httpMethod\":\"POST\"}}"},"lastOperationName":"projects/flexijobber-11a4c/operations/ad51f52e-7baa-4330-b171-49a41552a190","serviceAccountEmail":"ext-firestore-send-email@flexijobber-11a4c.iam.gserviceaccount.com","lastOperationType":"CREATE","etag":"6d91a69f45683f1630e95daf7e63b86d81856cd305177a6c45bf92550c27a68c"}]}
[info] i  functions: Loaded environment variables from .env. 
[info] i  functions: preparing functions directory for uploading... 
[info] i  functions: packaged /Users/safiurrehman/Upwork/superio/functions (48.26 KB) for uploading 
[debug] [2025-06-06T10:21:43.969Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:43.969Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:43.970Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v1/projects/flexijobber-11a4c/locations/-/functions [none]
[debug] [2025-06-06T10:21:49.552Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v1/projects/flexijobber-11a4c/locations/-/functions 200
[debug] [2025-06-06T10:21:49.553Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v1/projects/flexijobber-11a4c/locations/-/functions {}
[debug] [2025-06-06T10:21:49.554Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:49.554Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:49.554Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/-/functions filter=environment%3D%22GEN_2%22
[debug] [2025-06-06T10:21:50.661Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/-/functions 200
[debug] [2025-06-06T10:21:50.661Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/-/functions {}
[info] i  functions: ensuring required API cloudscheduler.googleapis.com is enabled... 
[debug] [2025-06-06T10:21:50.665Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:50.665Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:50.665Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com [none]
[debug] [2025-06-06T10:21:50.666Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:52.284Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com 200
[debug] [2025-06-06T10:21:52.284Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com [omitted]
[warn] ⚠  functions: missing required API cloudscheduler.googleapis.com. Enabling now... 
[debug] [2025-06-06T10:21:52.285Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:52.285Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:21:52.286Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com:enable [none]
[debug] [2025-06-06T10:21:52.286Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com:enable x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:21:54.171Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com:enable 200
[debug] [2025-06-06T10:21:54.171Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com:enable [omitted]
[debug] [2025-06-06T10:22:04.176Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:04.178Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:04.179Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com [none]
[debug] [2025-06-06T10:22:04.179Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:22:05.865Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com 200
[debug] [2025-06-06T10:22:05.865Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/cloudscheduler.googleapis.com [omitted]
[info] ✔  functions: required API cloudscheduler.googleapis.com is enabled 
[info] i  functions: ensuring required API run.googleapis.com is enabled... 
[debug] [2025-06-06T10:22:05.874Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:05.874Z] Checked if tokens are valid: true, expires at: 1749208462971
[info] i  functions: ensuring required API eventarc.googleapis.com is enabled... 
[debug] [2025-06-06T10:22:05.875Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:05.875Z] Checked if tokens are valid: true, expires at: 1749208462971
[info] i  functions: ensuring required API pubsub.googleapis.com is enabled... 
[debug] [2025-06-06T10:22:05.875Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:05.875Z] Checked if tokens are valid: true, expires at: 1749208462971
[info] i  functions: ensuring required API storage.googleapis.com is enabled... 
[debug] [2025-06-06T10:22:05.875Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:05.875Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:05.875Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/run.googleapis.com [none]
[debug] [2025-06-06T10:22:05.875Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/run.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:22:05.876Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/eventarc.googleapis.com [none]
[debug] [2025-06-06T10:22:05.876Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/eventarc.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:22:05.878Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/pubsub.googleapis.com [none]
[debug] [2025-06-06T10:22:05.878Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/pubsub.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:22:05.880Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/storage.googleapis.com [none]
[debug] [2025-06-06T10:22:05.880Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/storage.googleapis.com x-goog-quota-user=projects/flexijobber-11a4c
[debug] [2025-06-06T10:22:07.336Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/run.googleapis.com 200
[debug] [2025-06-06T10:22:07.338Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/run.googleapis.com [omitted]
[info] ✔  functions: required API run.googleapis.com is enabled 
[debug] [2025-06-06T10:22:07.489Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/eventarc.googleapis.com 200
[debug] [2025-06-06T10:22:07.489Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/eventarc.googleapis.com [omitted]
[info] ✔  functions: required API eventarc.googleapis.com is enabled 
[debug] [2025-06-06T10:22:07.500Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/pubsub.googleapis.com 200
[debug] [2025-06-06T10:22:07.500Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/pubsub.googleapis.com [omitted]
[info] ✔  functions: required API pubsub.googleapis.com is enabled 
[debug] [2025-06-06T10:22:07.529Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/storage.googleapis.com 200
[debug] [2025-06-06T10:22:07.529Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/flexijobber-11a4c/services/storage.googleapis.com [omitted]
[info] ✔  functions: required API storage.googleapis.com is enabled 
[info] i  functions: generating the service identity for pubsub.googleapis.com... 
[debug] [2025-06-06T10:22:07.531Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:07.531Z] Checked if tokens are valid: true, expires at: 1749208462971
[info] i  functions: generating the service identity for eventarc.googleapis.com... 
[debug] [2025-06-06T10:22:07.531Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:07.531Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:07.531Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/409931945808/services/pubsub.googleapis.com:generateServiceIdentity [none]
[debug] [2025-06-06T10:22:07.535Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/409931945808/services/eventarc.googleapis.com:generateServiceIdentity [none]
[debug] [2025-06-06T10:22:08.092Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/409931945808/services/eventarc.googleapis.com:generateServiceIdentity 200
[debug] [2025-06-06T10:22:08.092Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/409931945808/services/eventarc.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-409931945808@gcp-sa-eventarc.iam.gserviceaccount.com","uniqueId":"113883864601172192456"}}
[debug] [2025-06-06T10:22:08.139Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/409931945808/services/pubsub.googleapis.com:generateServiceIdentity 200
[debug] [2025-06-06T10:22:08.140Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/409931945808/services/pubsub.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-409931945808@gcp-sa-pubsub.iam.gserviceaccount.com","uniqueId":"111851633250913544422"}}
[debug] [2025-06-06T10:22:08.144Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:08.144Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:08.144Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c [none]
[debug] [2025-06-06T10:22:09.650Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c 200
[debug] [2025-06-06T10:22:09.650Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/flexijobber-11a4c {"projectNumber":"409931945808","projectId":"flexijobber-11a4c","lifecycleState":"ACTIVE","name":"Flexijobber","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-05-01T18:45:28.685772Z"}
[debug] [2025-06-06T10:22:09.654Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:09.654Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:09.655Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/flexijobber-11a4c/billingInfo [none]
[debug] [2025-06-06T10:22:10.380Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/flexijobber-11a4c/billingInfo 200
[debug] [2025-06-06T10:22:10.380Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/flexijobber-11a4c/billingInfo {"name":"projects/flexijobber-11a4c/billingInfo","projectId":"flexijobber-11a4c","billingAccountName":"billingAccounts/01FE3F-328D41-77B5FB","billingEnabled":true}
[debug] [2025-06-06T10:22:10.383Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:10.383Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:10.383Z] >>> [apiv2][query] POST https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/functions:generateUploadUrl [none]
[debug] [2025-06-06T10:22:12.343Z] <<< [apiv2][status] POST https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/functions:generateUploadUrl 200
[debug] [2025-06-06T10:22:12.343Z] <<< [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/functions:generateUploadUrl {"uploadUrl":"https://storage.googleapis.com/gcf-v2-uploads-409931945808.us-central1.cloudfunctions.appspot.com/d7bc8eab-8f21-4d19-99f1-48206c1d3cf2.zip?GoogleAccessId=service-409931945808@gcf-admin-robot.iam.gserviceaccount.com&Expires=1749207132&Signature=Kwp9%2BDpoQe197LtnZYM5c7VRDBtcuNPuYR4N%2BNoSe4cbNFDeYNkHKNQPmVBsOVfxEHeMx6%2BRnFPS9jy72%2FgY4UsEISkCRI60gTgwOKGBLPS9YomXH9nvnq9mPYv1MHyZTIewdOwQfYfakKu3sI8OMjee%2BnHschiXepKiUhW0iFgJ1fWkckBrCjNCcpcuz4Dk0xyYRzp7C%2F%2FVpVjt7TG1tpgIuXQI8y2AbCcSZpv9NFWHo0QUKBSSK3OjqQj9FkMP9i1a9n68Pp6fe22%2FCzgDN7T8nbMEPKEH7ntFa1DA%2FwFnt6WmE9AFVSRHhDFQAaAWxnvd7ERIul1pqO1WFR86QQ%3D%3D","storageSource":{"bucket":"gcf-v2-uploads-409931945808.us-central1.cloudfunctions.appspot.com","object":"d7bc8eab-8f21-4d19-99f1-48206c1d3cf2.zip"}}
[debug] [2025-06-06T10:22:12.350Z] >>> [apiv2][query] PUT https://storage.googleapis.com/gcf-v2-uploads-409931945808.us-central1.cloudfunctions.appspot.com/d7bc8eab-8f21-4d19-99f1-48206c1d3cf2.zip GoogleAccessId=service-409931945808%40gcf-admin-robot.iam.gserviceaccount.com&Expires=1749207132&Signature=Kwp9%2BDpoQe197LtnZYM5c7VRDBtcuNPuYR4N%2BNoSe4cbNFDeYNkHKNQPmVBsOVfxEHeMx6%2BRnFPS9jy72%2FgY4UsEISkCRI60gTgwOKGBLPS9YomXH9nvnq9mPYv1MHyZTIewdOwQfYfakKu3sI8OMjee%2BnHschiXepKiUhW0iFgJ1fWkckBrCjNCcpcuz4Dk0xyYRzp7C%2F%2FVpVjt7TG1tpgIuXQI8y2AbCcSZpv9NFWHo0QUKBSSK3OjqQj9FkMP9i1a9n68Pp6fe22%2FCzgDN7T8nbMEPKEH7ntFa1DA%2FwFnt6WmE9AFVSRHhDFQAaAWxnvd7ERIul1pqO1WFR86QQ%3D%3D
[debug] [2025-06-06T10:22:12.350Z] >>> [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-409931945808.us-central1.cloudfunctions.appspot.com/d7bc8eab-8f21-4d19-99f1-48206c1d3cf2.zip [stream]
[debug] [2025-06-06T10:22:14.052Z] <<< [apiv2][status] PUT https://storage.googleapis.com/gcf-v2-uploads-409931945808.us-central1.cloudfunctions.appspot.com/d7bc8eab-8f21-4d19-99f1-48206c1d3cf2.zip 200
[debug] [2025-06-06T10:22:14.052Z] <<< [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-409931945808.us-central1.cloudfunctions.appspot.com/d7bc8eab-8f21-4d19-99f1-48206c1d3cf2.zip [omitted]
[info] ✔  functions: functions folder uploaded successfully 
[info] i  functions: creating Node.js 22 (2nd Gen) function sendJobAlerts(us-central1)... 
[debug] [2025-06-06T10:22:14.062Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:14.062Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:14.062Z] >>> [apiv2][query] POST https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/functions functionId=sendJobAlerts
[debug] [2025-06-06T10:22:14.062Z] >>> [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/functions {"name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-uploads-409931945808.us-central1.cloudfunctions.appspot.com","object":"d7bc8eab-8f21-4d19-99f1-48206c1d3cf2.zip"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""}},"serviceConfig":{"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts"},"ingressSettings":null,"timeoutSeconds":540,"serviceAccountEmail":null,"availableMemory":"256Mi","minInstanceCount":null,"maxInstanceCount":null,"maxInstanceRequestConcurrency":80,"availableCpu":"1","vpcConnector":null,"vpcConnectorEgressSettings":null},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"}}
[debug] [2025-06-06T10:22:16.121Z] <<< [apiv2][status] POST https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/functions 200
[debug] [2025-06-06T10:22:16.121Z] <<< [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/functions {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2"},"done":false}
[debug] [2025-06-06T10:22:16.123Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:16.123Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:16.123Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:22:17.273Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:22:17.273Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION"},"done":false}
[debug] [2025-06-06T10:22:17.776Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:22:17.776Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:17.776Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:17.777Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:22:18.659Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:22:18.659Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION"},"done":false}
[debug] [2025-06-06T10:22:19.659Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:22:19.660Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:19.660Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:19.660Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:22:20.499Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:22:20.499Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION"},"done":false}
[debug] [2025-06-06T10:22:22.501Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:22:22.502Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:22.502Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:22.502Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:22:23.363Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:22:23.363Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION"},"done":false}
[debug] [2025-06-06T10:22:27.366Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:22:27.367Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:27.367Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:27.367Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:22:28.229Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:22:28.229Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:22:36.230Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:22:36.232Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:36.233Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:36.233Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:22:37.333Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:22:37.333Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:22:47.338Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:22:47.346Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:47.346Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:22:47.346Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:22:52.273Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:22:52.273Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:23:02.276Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:23:02.280Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:02.286Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:02.286Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:23:03.325Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:23:03.325Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:23:13.328Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:23:13.329Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:13.329Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:13.330Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:23:14.343Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:23:14.344Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:23:24.354Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:23:24.359Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:24.360Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:24.360Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:23:25.403Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:23:25.403Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:23:35.407Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:23:35.410Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:35.411Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:35.411Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:23:36.502Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:23:36.502Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:23:46.507Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:23:46.537Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:46.537Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:46.539Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:23:47.640Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:23:47.643Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:23:57.650Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:23:57.653Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:57.654Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:23:57.662Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:23:58.713Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:23:58.714Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build finished","state":"COMPLETE","resource":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=us-central1/a79db317-8ce9-4ae1-b484-4e98c90ae235?project=409931945808"},{"name":"SERVICE","message":"Creating Cloud Run service","state":"IN_PROGRESS","resource":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","resourceUri":"https://console.cloud.google.com/run/detail/us-central1/sendjobalerts?project=flexijobber-11a4c"}],"sourceToken":"Cldwcm9qZWN0cy80MDk5MzE5NDU4MDgvbG9jYXRpb25zL3VzLWNlbnRyYWwxL2J1aWxkcy9hNzlkYjMxNy04Y2U5LTRhZTEtYjQ4NC00ZTk4YzkwYWUyMzUSdnVzLWNlbnRyYWwxLWRvY2tlci5wa2cuZGV2L2ZsZXhpam9iYmVyLTExYTRjL2djZi1hcnRpZmFjdHMvZmxleGlqb2JiZXItLTExYTRjX191cy0tY2VudHJhbDFfX3NlbmRfam9iX2FsZXJ0czp2ZXJzaW9uXzEY0K7kjvcLIkhwcm9qZWN0cy9mbGV4aWpvYmJlci0xMWE0Yy9sb2NhdGlvbnMvdXMtY2VudHJhbDEvZnVuY3Rpb25zL3NlbmRKb2JBbGVydHMqDAi1g4vCBhD4uZ2uATIIbm9kZWpzMjI6dgojZ2NyLmlvL2dhZS1ydW50aW1lcy9ub2RlanMyMjpzdGFibGUST3VzLWNlbnRyYWwxLWRvY2tlci5wa2cuZGV2L3NlcnZlcmxlc3MtcnVudGltZXMvZ29vZ2xlLTIyLWZ1bGwvcnVudGltZXMvbm9kZWpzMjJAAQ==","operationType":"CREATE_FUNCTION","buildName":"projects/409931945808/locations/us-central1/builds/a79db317-8ce9-4ae1-b484-4e98c90ae235"},"done":false}
[debug] [2025-06-06T10:23:58.715Z] Got source token Cldwcm9qZWN0cy80MDk5MzE5NDU4MDgvbG9jYXRpb25zL3VzLWNlbnRyYWwxL2J1aWxkcy9hNzlkYjMxNy04Y2U5LTRhZTEtYjQ4NC00ZTk4YzkwYWUyMzUSdnVzLWNlbnRyYWwxLWRvY2tlci5wa2cuZGV2L2ZsZXhpam9iYmVyLTExYTRjL2djZi1hcnRpZmFjdHMvZmxleGlqb2JiZXItLTExYTRjX191cy0tY2VudHJhbDFfX3NlbmRfam9iX2FsZXJ0czp2ZXJzaW9uXzEY0K7kjvcLIkhwcm9qZWN0cy9mbGV4aWpvYmJlci0xMWE0Yy9sb2NhdGlvbnMvdXMtY2VudHJhbDEvZnVuY3Rpb25zL3NlbmRKb2JBbGVydHMqDAi1g4vCBhD4uZ2uATIIbm9kZWpzMjI6dgojZ2NyLmlvL2dhZS1ydW50aW1lcy9ub2RlanMyMjpzdGFibGUST3VzLWNlbnRyYWwxLWRvY2tlci5wa2cuZGV2L3NlcnZlcmxlc3MtcnVudGltZXMvZ29vZ2xlLTIyLWZ1bGwvcnVudGltZXMvbm9kZWpzMjJAAQ== for region us-central1
[debug] [2025-06-06T10:24:08.722Z] [create-default-us-central1-sendJobAlerts] Retrying task index 0
[debug] [2025-06-06T10:24:08.724Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:08.725Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:08.730Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 [none]
[debug] [2025-06-06T10:24:09.795Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 200
[debug] [2025-06-06T10:24:09.796Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26 {"name":"projects/flexijobber-11a4c/locations/us-central1/operations/operation-1749205335035-636e49aa24edb-fe1fe631-88f87e26","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-06-06T10:22:16.197813954Z","endTime":"2025-06-06T10:24:06.480774078Z","target":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/flexijobber-11a4c/locations/us-central1/functions/sendJobAlerts","buildConfig":{"runtime":"nodejs22","entryPoint":"sendJobAlerts","source":{"storageSource":{"bucket":"gcf-v2-sources-409931945808-us-central1","object":"sendJobAlerts/function-source.zip","generation":"1749205335875618"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/flexijobber-11a4c/serviceAccounts/409931945808-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts","timeoutSeconds":540,"environmentVariables":{"NEXT_PUBLIC_EMAILJS_SERVICE_ID":"service_pxzdz12","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID":"template_ze5clom","NEXT_PUBLIC_EMAILJS_PUBLIC_KEY":"spX-U3xAiU17jg7yz","FIREBASE_CONFIG":"{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}","GCLOUD_PROJECT":"flexijobber-11a4c","EVENTARC_CLOUD_EVENT_SOURCE":"projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts","FUNCTION_TARGET":"sendJobAlerts","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"409931945808-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-scheduled":"true","firebase-functions-hash":"b59638c5cb2379af49d1520785bde403f1e0f363"},"environment":"GEN_2"},"stages":[{"name":"ARTIFACT_REGISTRY","message":"Deleting function artifacts in Artifact Registry","state":"COMPLETE"},{"name":"SERVICE","message":"Deleting Cloud Run service","state":"COMPLETE","resource":"projects/flexijobber-11a4c/locations/us-central1/services/sendjobalerts"}],"operationType":"CREATE_FUNCTION"},"done":true,"error":{"code":3,"message":"Could not create or update Cloud Run service sendjobalerts, Container Healthcheck failed. Revision 'sendjobalerts-00001-ruv' is not ready and cannot serve traffic. The user-provided container failed to start and listen on the port defined provided by the PORT=8080 environment variable within the allocated timeout. This can happen when the container port is misconfigured or if the timeout is too short. The health check timeout can be extended. Logs for this revision might contain more information.\n\nLogs URL: https://console.cloud.google.com/logs/viewer?project=flexijobber-11a4c&resource=cloud_run_revision/service_name/sendjobalerts/revision_name/sendjobalerts-00001-ruv&advancedFilter=resource.type%3D%22cloud_run_revision%22%0Aresource.labels.service_name%3D%22sendjobalerts%22%0Aresource.labels.revision_name%3D%22sendjobalerts-00001-ruv%22 \nFor more troubleshooting guidance, see https://cloud.google.com/run/docs/troubleshooting#container-failed-to-start"}}
[debug] [2025-06-06T10:24:09.796Z] Got source token undefined for region us-central1
[error] Could not create or update Cloud Run service sendjobalerts, Container Healthcheck failed. Revision 'sendjobalerts-00001-ruv' is not ready and cannot serve traffic. The user-provided container failed to start and listen on the port defined provided by the PORT=8080 environment variable within the allocated timeout. This can happen when the container port is misconfigured or if the timeout is too short. The health check timeout can be extended. Logs for this revision might contain more information.

Logs URL: https://console.cloud.google.com/logs/viewer?project=flexijobber-11a4c&resource=cloud_run_revision/service_name/sendjobalerts/revision_name/sendjobalerts-00001-ruv&advancedFilter=resource.type%3D%22cloud_run_revision%22%0Aresource.labels.service_name%3D%22sendjobalerts%22%0Aresource.labels.revision_name%3D%22sendjobalerts-00001-ruv%22 
For more troubleshooting guidance, see https://cloud.google.com/run/docs/troubleshooting#container-failed-to-start
[debug] [2025-06-06T10:24:09.831Z] Total Function Deployment time: 115758
[debug] [2025-06-06T10:24:09.832Z] 1 Functions Deployed
[debug] [2025-06-06T10:24:09.832Z] 1 Functions Errored
[debug] [2025-06-06T10:24:09.832Z] 0 Function Deployments Aborted
[debug] [2025-06-06T10:24:09.832Z] Average Function Deployment time: 115757
[info] 
[info] Functions deploy had errors with the following functions:
	sendJobAlerts(us-central1)
[info] i  functions: cleaning up build files... 
[debug] [2025-06-06T10:24:10.276Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:10.276Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:10.279Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:10.279Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:10.279Z] >>> [apiv2][query] DELETE https://artifactregistry.googleapis.com/v1beta2/projects/flexijobber-11a4c/locations/us-central1/repositories/gcf-artifacts/packages/send_job_alerts [none]
[debug] [2025-06-06T10:24:10.281Z] >>> [apiv2][query] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list [none]
[debug] [2025-06-06T10:24:11.538Z] <<< [apiv2][status] DELETE https://artifactregistry.googleapis.com/v1beta2/projects/flexijobber-11a4c/locations/us-central1/repositories/gcf-artifacts/packages/send_job_alerts 404
[debug] [2025-06-06T10:24:11.539Z] <<< [apiv2][body] DELETE https://artifactregistry.googleapis.com/v1beta2/projects/flexijobber-11a4c/locations/us-central1/repositories/gcf-artifacts/packages/send_job_alerts {"error":{"code":404,"message":"Package \"projects/flexijobber-11a4c/locations/us-central1/repositories/gcf-artifacts/packages/send_job_alerts\" was not found.","status":"NOT_FOUND"}}
[debug] [2025-06-06T10:24:12.388Z] <<< [apiv2][status] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list 404
[debug] [2025-06-06T10:24:12.388Z] <<< [apiv2][body] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list {"errors":[{"code":"NAME_UNKNOWN","message":"Repository \"us.gcr.io\" not found"}]}
[debug] [2025-06-06T10:24:12.389Z] Failed docker command with error  Request to https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list had HTTP Error: 404, Not Found {"name":"FirebaseError","children":[],"context":{"body":{"errors":[{"code":"NAME_UNKNOWN","message":"Repository \"us.gcr.io\" not found"}],"error":{"message":"Not Found"}},"response":{"statusCode":404}},"exit":1,"message":"Request to https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list had HTTP Error: 404, Not Found","status":404}
[debug] [2025-06-06T10:24:12.392Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:12.393Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:12.393Z] >>> [apiv2][query] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list [none]
[debug] [2025-06-06T10:24:12.747Z] <<< [apiv2][status] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list 404
[debug] [2025-06-06T10:24:12.747Z] <<< [apiv2][body] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list {"errors":[{"code":"NAME_UNKNOWN","message":"Repository \"us.gcr.io\" not found"}]}
[debug] [2025-06-06T10:24:12.747Z] Failed docker command with error  Request to https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list had HTTP Error: 404, Not Found {"name":"FirebaseError","children":[],"context":{"body":{"errors":[{"code":"NAME_UNKNOWN","message":"Repository \"us.gcr.io\" not found"}],"error":{"message":"Not Found"}},"response":{"statusCode":404}},"exit":1,"message":"Request to https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list had HTTP Error: 404, Not Found","status":404}
[debug] [2025-06-06T10:24:12.849Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:12.849Z] Checked if tokens are valid: true, expires at: 1749208462971
[debug] [2025-06-06T10:24:12.849Z] >>> [apiv2][query] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list [none]
[debug] [2025-06-06T10:24:13.219Z] <<< [apiv2][status] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list 404
[debug] [2025-06-06T10:24:13.219Z] <<< [apiv2][body] GET https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list {"errors":[{"code":"NAME_UNKNOWN","message":"Repository \"us.gcr.io\" not found"}]}
[debug] [2025-06-06T10:24:13.219Z] Failed docker command with error  Request to https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list had HTTP Error: 404, Not Found {"name":"FirebaseError","children":[],"context":{"body":{"errors":[{"code":"NAME_UNKNOWN","message":"Repository \"us.gcr.io\" not found"}],"error":{"message":"Not Found"}},"response":{"statusCode":404}},"exit":1,"message":"Request to https://us.gcr.io/v2/flexijobber-11a4c/gcf/us-central1/tags/list had HTTP Error: 404, Not Found","status":404}
[warn] ⚠  functions: Unhandled error cleaning up build images. This could result in a small monthly bill if not corrected. You can attempt to delete these images by redeploying or you can delete them manually at https://console.cloud.google.com/gcr/images/flexijobber-11a4c/us/gcf 
[debug] [2025-06-06T10:24:13.220Z] Functions deploy failed.
[debug] [2025-06-06T10:24:13.220Z] {
  "endpoint": {
    "id": "sendJobAlerts",
    "project": "flexijobber-11a4c",
    "region": "us-central1",
    "entryPoint": "sendJobAlerts",
    "platform": "gcfv2",
    "runtime": "nodejs22",
    "scheduleTrigger": {
      "schedule": "every 24 hours",
      "timeZone": "America/New_York",
      "retryConfig": {}
    },
    "labels": {
      "deployment-tool": "cli-firebase"
    },
    "ingressSettings": null,
    "serviceAccount": null,
    "timeoutSeconds": 540,
    "maxInstances": null,
    "minInstances": null,
    "concurrency": 80,
    "vpc": null,
    "environmentVariables": {
      "NEXT_PUBLIC_EMAILJS_SERVICE_ID": "service_pxzdz12",
      "NEXT_PUBLIC_EMAILJS_TEMPLATE_ID": "template_ze5clom",
      "NEXT_PUBLIC_EMAILJS_PUBLIC_KEY": "spX-U3xAiU17jg7yz",
      "FIREBASE_CONFIG": "{\"projectId\":\"flexijobber-11a4c\",\"storageBucket\":\"flexijobber-11a4c.firebasestorage.app\"}",
      "GCLOUD_PROJECT": "flexijobber-11a4c",
      "EVENTARC_CLOUD_EVENT_SOURCE": "projects/flexijobber-11a4c/locations/us-central1/services/sendJobAlerts"
    },
    "codebase": "default",
    "cpu": 1,
    "targetedByOnly": false,
    "hash": "b59638c5cb2379af49d1520785bde403f1e0f363"
  },
  "op": "create",
  "original": {
    "name": "FirebaseError",
    "children": [],
    "exit": 1,
    "message": "Could not create or update Cloud Run service sendjobalerts, Container Healthcheck failed. Revision 'sendjobalerts-00001-ruv' is not ready and cannot serve traffic. The user-provided container failed to start and listen on the port defined provided by the PORT=8080 environment variable within the allocated timeout. This can happen when the container port is misconfigured or if the timeout is too short. The health check timeout can be extended. Logs for this revision might contain more information.\n\nLogs URL: https://console.cloud.google.com/logs/viewer?project=flexijobber-11a4c&resource=cloud_run_revision/service_name/sendjobalerts/revision_name/sendjobalerts-00001-ruv&advancedFilter=resource.type%3D%22cloud_run_revision%22%0Aresource.labels.service_name%3D%22sendjobalerts%22%0Aresource.labels.revision_name%3D%22sendjobalerts-00001-ruv%22 \nFor more troubleshooting guidance, see https://cloud.google.com/run/docs/troubleshooting#container-failed-to-start",
    "original": {
      "code": 3,
      "message": "Could not create or update Cloud Run service sendjobalerts, Container Healthcheck failed. Revision 'sendjobalerts-00001-ruv' is not ready and cannot serve traffic. The user-provided container failed to start and listen on the port defined provided by the PORT=8080 environment variable within the allocated timeout. This can happen when the container port is misconfigured or if the timeout is too short. The health check timeout can be extended. Logs for this revision might contain more information.\n\nLogs URL: https://console.cloud.google.com/logs/viewer?project=flexijobber-11a4c&resource=cloud_run_revision/service_name/sendjobalerts/revision_name/sendjobalerts-00001-ruv&advancedFilter=resource.type%3D%22cloud_run_revision%22%0Aresource.labels.service_name%3D%22sendjobalerts%22%0Aresource.labels.revision_name%3D%22sendjobalerts-00001-ruv%22 \nFor more troubleshooting guidance, see https://cloud.google.com/run/docs/troubleshooting#container-failed-to-start"
    },
    "status": 3,
    "code": 3
  }
}
[debug] [2025-06-06T10:24:13.400Z] Error: Failed to create function sendJobAlerts in region us-central1
    at /opt/homebrew/lib/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:294:27
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Fabricator.createV2Function (/opt/homebrew/lib/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:278:30)
    at async Fabricator.createEndpoint (/opt/homebrew/lib/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:137:13)
    at async handle (/opt/homebrew/lib/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:89:17)
[error] 
[error] Error: There was an error deploying functions
